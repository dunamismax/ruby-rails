name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        ruby-version: ['3.3.0', '3.2.0']
        
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        
    - name: Setup root dependencies
      run: bundle install
      
    - name: Run bootstrap script
      run: ruby scripts/development/bootstrap.rb
      
    - name: Run shared utilities tests
      run: |
        cd gems/shared_utilities
        bundle exec rspec
        
    - name: Run Rails applications tests
      run: |
        cd apps/dunamismax
        bundle exec rails test
        cd ../apiplayground
        bundle exec rails test
        
    - name: Run security audit
      run: |
        cd apps/dunamismax
        bundle exec brakeman --no-pager
        cd ../apiplayground
        bundle exec brakeman --no-pager
        
    - name: Run code quality checks
      run: |
        cd apps/dunamismax
        bundle exec rubocop
        cd ../apiplayground
        bundle exec rubocop
        
    - name: Check for outdated dependencies
      run: |
        cd apps/dunamismax
        bundle outdated --strict
        cd ../apiplayground
        bundle outdated --strict
      continue-on-error: true
      
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3.0'
        bundler-cache: true
        
    - name: Run deployment script
      run: ruby scripts/deployment/deploy.rb --dry-run
      
    - name: Notify deployment status
      if: always()
      run: |
        echo "Deployment completed with status: ${{ job.status }}"